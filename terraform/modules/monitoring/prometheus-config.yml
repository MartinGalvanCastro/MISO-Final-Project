global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'medisupply'
    environment: 'development'

rule_files:
  - "/etc/prometheus/alerts.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics

  # ECS Service Discovery for application services
  - job_name: 'ecs-orders-service'
    scrape_interval: 15s
    ec2_sd_configs:
      - region: us-east-1
        port: 8001
        filters:
          - name: tag:aws:ecs:service-name
            values:
              - medisupply-orders-service
    relabel_configs:
      - source_labels: [__meta_ec2_tag_aws_ecs_service_name]
        target_label: service
      - source_labels: [__meta_ec2_tag_aws_ecs_cluster_name]
        target_label: cluster
      - source_labels: [__meta_ec2_private_ip]
        regex: (.*)
        target_label: __address__
        replacement: ${1}:8001
    metrics_path: /metrics

  - job_name: 'ecs-inventory-service'
    scrape_interval: 15s
    ec2_sd_configs:
      - region: us-east-1
        port: 8002
        filters:
          - name: tag:aws:ecs:service-name
            values:
              - medisupply-inventory-service
    relabel_configs:
      - source_labels: [__meta_ec2_tag_aws_ecs_service_name]
        target_label: service
      - source_labels: [__meta_ec2_tag_aws_ecs_cluster_name]
        target_label: cluster
      - source_labels: [__meta_ec2_private_ip]
        regex: (.*)
        target_label: __address__
        replacement: ${1}:8002
    metrics_path: /metrics

  # CloudWatch Exporter for AWS metrics (cost-optimized)
  - job_name: 'cloudwatch-exporter'
    scrape_interval: 60s
    static_configs:
      - targets: ['cloudwatch-exporter:9106']
    metrics_path: /metrics

  # ECS Task metrics via cAdvisor (container metrics)
  - job_name: 'cadvisor'
    scrape_interval: 30s
    ec2_sd_configs:
      - region: us-east-1
        port: 8080
        filters:
          - name: tag:Name
            values:
              - "*-ecs-instance"
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
      - source_labels: [__meta_ec2_private_ip]
        regex: (.*)
        target_label: __address__
        replacement: ${1}:8080
    metrics_path: /metrics

  # Load Testing specific metrics (high frequency during tests)
  - job_name: 'load-test-metrics'
    scrape_interval: 5s
    honor_labels: true
    static_configs:
      - targets: []  # Dynamically populated during load tests
    scrape_timeout: 4s
    params:
      format: ['prometheus']

  # Custom application metrics endpoints
  - job_name: 'custom-app-metrics'
    scrape_interval: 15s
    static_configs:
      - targets:
        - 'orders-service:8001'
        - 'inventory-service:8002'
    metrics_path: /metrics
    scrape_timeout: 10s

  # ALB Target Group health metrics
  - job_name: 'alb-target-health'
    scrape_interval: 30s
    static_configs:
      - targets: ['cloudwatch-exporter:9106']
    params:
      module: [alb_target_group_health]
    metrics_path: /probe
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: cloudwatch-exporter:9106

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://your-remote-storage/api/v1/write"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500