# Terraform Variables Configuration Example
# Copy this file to terraform.tfvars and customize the values for your environment
# terraform.tfvars is gitignored for security

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# AWS region for all resources
aws_region = "us-east-1"

# Environment name (development, staging, production)
environment = "development"

# Name of the project
project_name = "medisupply"

# Common tags applied to all resources
common_tags = {
  Project     = "medisupply"
  Environment = "development"
  ManagedBy   = "terraform"
  Owner       = "your-team"
  CostCenter  = "engineering"
}

# =============================================================================
# ECR CONFIGURATION
# =============================================================================

# ECR repository names
orders_service_repo_name     = "medisupply/orders-service"
inventory_service_repo_name  = "medisupply/inventory-service"

# ECR settings
ecr_image_tag_mutability = "MUTABLE"  # or "IMMUTABLE"
ecr_scan_on_push         = true

# ECR lifecycle policy
ecr_keep_versioned_images = 5
ecr_keep_latest_images    = 3
ecr_untagged_expiry_days  = 2

# =============================================================================
# SQS CONFIGURATION
# =============================================================================

# Queue name
orders_queue_name = "orders-queue-dev"

# SQS settings
sqs_visibility_timeout_seconds = 300
sqs_message_retention_seconds  = 1209600  # 14 days
sqs_receive_wait_time_seconds  = 20
sqs_max_message_size          = 262144

# Dead letter queue (optional - not used for orders service)
sqs_enable_dead_letter_queue = false
sqs_max_receive_count       = 3

# SQS monitoring
sqs_enable_cloudwatch_alarms    = true
sqs_queue_depth_alarm_threshold = 100
sqs_dlq_depth_alarm_threshold   = 1

# SQS encryption (optional)
# sqs_kms_master_key_id = "alias/aws/sqs"

# =============================================================================
# CODEBUILD CONFIGURATION
# =============================================================================

# Build configuration
codebuild_compute_type = "BUILD_GENERAL1_SMALL"  # Small for cost savings
codebuild_image        = "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
codebuild_source_type  = "GITHUB"

# Source repositories
orders_service_source_location    = "https://github.com/your-org/medisupply-services.git"
inventory_service_source_location = "https://github.com/your-org/medisupply-services.git"

# Version tags
orders_service_version_tag    = "v1.0.0"
inventory_service_version_tag = "v1.0.0"

# Environment variables for CodeBuild
codebuild_environment_variables = {
  NODE_ENV = "production"
  DEBUG    = "false"
}

# Logging
codebuild_log_retention_days = 14
codebuild_enable_alarms     = true

# =============================================================================
# VPC CONFIGURATION
# =============================================================================

# VPC settings
vpc_cidr_block = "10.0.0.0/16"

# Subnets
public_subnet_count  = 2  # Required for ALB
private_subnet_count = 2  # Required for ECS

# NAT and endpoints
create_nat_gateways = true   # Set to false for cost savings in dev
create_s3_endpoint  = true

# =============================================================================
# APPLICATION LOAD BALANCER CONFIGURATION
# =============================================================================

# ALB settings
alb_enable_deletion_protection = false  # true for production
alb_idle_timeout              = 60

# Access logs (optional)
alb_enable_access_logs = false
# alb_access_logs_bucket = "your-alb-logs-bucket"

# HTTPS (optional)
alb_enable_https = false
# alb_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/your-cert-id"

# =============================================================================
# ECS FARGATE CONFIGURATION
# =============================================================================

# Orders Service ECS Configuration
ecs_orders_cpu    = 256   # 0.25 vCPU
ecs_orders_memory = 512   # 512 MB

# Orders service secrets (from Parameter Store/Secrets Manager)
ecs_orders_secrets = {
  # "DATABASE_PASSWORD" = "arn:aws:ssm:us-east-1:123456789012:parameter/medisupply/dev/database/password"
  # "JWT_SECRET"        = "arn:aws:secretsmanager:us-east-1:123456789012:secret:medisupply/dev/jwt-secret"
}

# Inventory Service ECS Configuration
ecs_inventory_cpu    = 256   # 0.25 vCPU
ecs_inventory_memory = 512   # 512 MB

# Inventory service secrets
ecs_inventory_secrets = {
  # "DATABASE_PASSWORD" = "arn:aws:ssm:us-east-1:123456789012:parameter/medisupply/dev/database/password"
}

# Auto Scaling
ecs_cpu_target_value    = 70
ecs_memory_target_value = 70

# Logging
ecs_log_retention_days      = 7
ecs_enable_cloudwatch_alarms = true

# =============================================================================
# CODEDEPLOY CONFIGURATION
# =============================================================================

# Blue-green deployment
enable_blue_green_deployment = true

# Deployment settings
codedeploy_termination_wait_time_minutes = 5
codedeploy_auto_rollback_enabled        = true

# Auto deployment
codedeploy_enable_auto_deployment = true
codedeploy_ecr_trigger_tags      = ["latest", "stable"]

# Logging
codedeploy_log_retention_days = 14

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# SRE monitoring with Prometheus and Grafana
enable_sre_monitoring = true

# Monitoring settings
monitoring_log_retention_days = 7
prometheus_retention_days     = 15

# Persistent storage for monitoring
enable_persistent_monitoring_storage = true

# Grafana admin password (change this!)
grafana_admin_password = "ChangeMe123!"

# =============================================================================
# COST OPTIMIZATION
# =============================================================================

# Enable cost optimizations for development
enable_cost_optimized_logging = true